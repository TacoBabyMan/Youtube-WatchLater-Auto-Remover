// ==UserScript==
// @name         Playlist user eject
// @namespace    bing bong
// @version      13
// @description  Auto Eject of user from playlist
// @author       Neo Sahadeo
// @match        https://www.youtube.com/*
// @grant        none
// ==/UserScript==

(
  function mainscript(){
    const pageLoading = setInterval(()=>{
      if(document.getElementById('end')!=null){
        clearInterval(pageLoading);
        let cookieList=decodeURIComponent(document.cookie);
        let url = window.location.href;
        let autoRemoveAllowed = false;
        const svgHasRunColour=()=>{document.getElementById("addedSettings").style.filter="invert(63%) sepia(98%) saturate(437%) hue-rotate(308deg) brightness(97%) contrast(120%)"};
        const svgSetColour=()=>{document.getElementById("addedSettings").style.filter="invert(32%) sepia(16%) saturate(4998%) hue-rotate(193deg) brightness(103%) contrast(105%)"};
        const svgUnsetColour=()=>{document.getElementById("addedSettings").style.filter=""};
        if(url.includes("&list=")){
          window.location.replace(url.slice(0,url.indexOf("&list=")));
        }

        document.getElementById('end').insertAdjacentHTML("afterbegin",`
        <svg width="24" height="17" viewBox="0 0 24 17" fill="none" xmlns="http://www.w3.org/2000/svg" id="addedSettings" style="margin:20px;cursor:pointer">
          <rect x="0.5" y="0.5" width="23" height="16" stroke="white"/>
          <rect x="5" y="4" width="14" height="3" fill="white"/>
          <rect x="5" y="10" width="14" height="3" fill="white"/>
        </svg>
        <style>
          tp-yt-iron-overlay-backdrop{
            display:none;
          }
          .ytd-popup-container{
            visibility:hidden;
          }
        </style>
        `);

        if((cookieList.search('removeWatchLater=true'))>0){
          autoRemoveAllowed=true;
          svgSetColour();
        }else{
          autoRemoveAllowed=false;
        }
        function settingJSInserter(){
          document.getElementById("addedSettings").addEventListener("click",()=>{watchLaterActive()});
          document.addEventListener("keypress",function keycheck(e){
            if(e.key=="e" && document.activeElement == document.querySelector('body')) watchLaterActive();
          });
        }settingJSInserter();
        function watchLaterActive(){
          cookieList=decodeURIComponent(document.cookie);
          if((cookieList.search('removeWatchLater=false'))>0){
            document.cookie="removeWatchLater=true";//turns on
            location.reload();
          }
          if((cookieList.search('removeWatchLater=true'))>0){
            document.cookie="removeWatchLater=false";//turn off
            cookieList=decodeURIComponent(document.cookie);
            svgUnsetColour();
          }
          if((cookieList.search('removeWatchLater'))==-1){
            document.cookie="removeWatchLater=true";
            svgSetColour();
          }
        };
        //---------------------------------------------------------------------------------------
        var hasRunActive = false;
        var readyChecker;
        let lastUrl = location.href;
        new MutationObserver(() => {
          const url = location.href;
          if (url != lastUrl) {
            lastUrl = url;
            setTimeout(()=>{
              if((location.href.search('com/watch') || location.href.search('com/shorts'))!=-1){
                location.reload();
              }else{
                svgSetColour();
              }
            },500);
          }
        }).observe(document, {subtree: true, childList: true});

        function focusChecker(){
          if(!hasRunActive && document.hasFocus() && document.readyState=='complete'){
            if(autoRemoveAllowed) autoClicker();
            hasRunActive = true;
            clearInterval(readyChecker);
            console.log('hasRun');
          }
        }

        function cssInjection(){
          document.querySelector('html').insertAdjacentHTML("afterbegin",`
             <style name="neo_css_injection">
               tp-yt-iron-overlay-backdrop{
                 display:block !important;
               }
               .ytd-popup-container{
                 visibility:visible !important;
               }
             </style>
             `);
        }
        cssInjection();
        
        //May need to rewrite some day... probably not, but maybe.
        function autoClicker(){
          if(document.querySelector('[name="neo_css_injection"]')!=null && ((location.href.search('com/watch') || location.href.search('com/shorts'))!=-1)){
            setTimeout(()=>{},0);
            document.querySelector('[name="neo_css_injection"]').remove()
          }
          const savetoplaylistclock = setInterval(()=>{
            if(document.querySelector('[aria-label="Save to playlist"]')!=null){
              document.querySelector('[aria-label="Save to playlist"]').click();
              clearInterval(savetoplaylistclock);
              const animationclock = setInterval(()=>{
                if(document.querySelector('tp-yt-paper-dialog[aria-hidden="true"]') === null){
                  const playlistclock = setInterval(()=>{
                    if(document.querySelectorAll('#checkmark')[0] != undefined){
                      if(!document.querySelectorAll('#checkmark')[0].classList.contains('hidden')){
                        document.querySelector('#checkbox').click();
                      }
                      document.querySelector('[aria-label="Save to playlist"]').click();
                      const animationclockhidden = setInterval(()=>{
                        if(document.querySelector('tp-yt-paper-dialog[aria-hidden="true"]') != null){
                          cssInjection();
                          svgHasRunColour();
                          clearInterval(animationclockhidden);
                        }
                      },100)
                      clearInterval(playlistclock);
                    }
                  },100);
                  clearInterval(animationclock);
                }
              },100);
            }
          },100);
        }
        // -------------------------------------------------------------------------------------------------------

        readyChecker = setInterval(focusChecker,100);
        window.addEventListener('focus',()=>{focusChecker()});
      }
  },100);
}
)();
